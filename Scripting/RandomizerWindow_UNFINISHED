// Random Tool Window
global proc RandomTool(){

    string $randGenWind = "RandomLocationGenerator";
    
    if (`window -exists $randGenWind`)
    deleteUI $randGenWind;
    
    $randGenWind = `window -title "Random Location Generator" $randGenWind`;
    string $randGenWindCol = `columnLayout -parent $randGenWind -columnAttach "both" 20 -rowSpacing 10 -columnWidth 425`;
    
    // Row 1 - for the int value
    string $randIntRow = `rowLayout -parent $randGenWindCol -numberOfColumns 2`;
    text -parent $randIntRow -label "Quantity of Duplicates" -width 120; 
    string $dupQuantity = `intField -parent $randIntRow -value 7 -minValue 1`; 
    
    // Row 2 - for float fields 
    string $randFloatRow = `rowLayout -parent $randGenWindCol -numberOfColumns 4`;
    text -parent $randFloatRow -label "Range of Placement" -width 120; 
    string $dupRangeX = `floatField -parent $randFloatRow -value 10.0`;
    string $dupRangeY = `floatField -parent $randFloatRow -value 10.0`;
    string $dupRangeZ = `floatField -parent $randFloatRow -value 10.0`;
    
    string $dupButton = `button -parent $randGenWindCol -label "Generate" -command ("DupValues(\"" + $dupQuantity + "\", \"" + $dupRangeX + "\", \"" + $dupRangeY + "\", \"" + $dupRangeZ + "\")")`;
    text -parent $randGenWindCol -label "";
    showWindow $randGenWind;
}

// Gets the Int Field Value from a window IntField
global proc int GetIntVal(string $control){
	int $intValue = `intField -q -v $control`;
 	return $intValue;
}

// Gets the Int Field Value from a window IntField
global proc float GetFloatVal(string $control){
	float $value = `floatField -q -v $control`;
 	return $value;
}

//GetTarget() Which gets the selected object(s)
global proc string GetTarget(){
    string $target[];
    string $sels[] = `ls -selection`;
    
    $target[0] = $sels[0];
       
    return $target[0];
}

// The purpose of this function is to query the vlues from the window and translate them to the argument type for the DupTarget function
global proc DupValues(string $quantityInt, string $moveX, string $moveY, string $moveZ){
    int $quantity = `GetIntFieldVal($quantityInt)`;
    float $moveX1 = `GetFloatVal($moveX)`;
    float $moveY1 = `GetFloatVal($moveY)`;
    float $moveZ1 = `GetFloatVal($moveZ)`;    
   
    print($moveX1 + " " + $moveY1 + " " + $moveZ1 + "\r" );
    DupTarget($quantity, $moveX1, $moveY1, $moveZ1); 
}


//
// The next procedure duplicates and randomizes the position of the pieces
//

global proc string DupTarget(int $amount, float $x01, float $y01, float $z01){
         
    string $obj = `GetTarget`;
    
    int $quantity = $amount;
        
    float $moveX1 = $x01;
    float $moveY1 = $y01;
    float $moveZ1 = $z01;       
        
    group -empty -name target_grp001;
    
    parent $obj target_grp001;
    
    string $dups[];
    int $counter = 0;
    
    int $randNum = rand (25,10);
          
    for($i=0; $i < $quantity; $i++){
        duplicate -rr $obj; 
        
        setAttr ($obj + ".scaleX") (1);
		setAttr ($obj + ".scaleY") (1);
		setAttr ($obj + ".scaleZ") (1);
                     
        setAttr ($obj + ".translateX") (0);
		setAttr ($obj + ".translateY") (0);
		setAttr ($obj + ".translateZ") (0);
        
        float $randScalex = rand (1,3);
        float $randScaley = rand (1,3);
        float $randScalez = rand (1,3); 
        
        float $randMovex = rand (-$moveX1,$moveX1);
        float $randMovey = rand (-$moveY1,$moveY1);
        float $randMovez = rand (-$moveZ1,$moveZ1); 
        //print($moveX1 + " " + $moveY1 + " " + $moveZ1 + "\r" );
        //print($randMovex + " " + $randMovey + " " + $randMovez);
                
        move -r -os -wd $randMovex $randMovey $randMovez $obj; 
        scale -r $randScalex $randScaley $randScalez  $obj;       
                 
        $dups[$counter] = $obj;
        $counter++;
        select -cl;
    }
   
    $counter = 0;
    
    select target_grp001;
    polyUnite -ch 1 -mergeUVSets 1 -name Main_grp001 target_grp001;
    
    delete -ch Main_grp001;
    return $dups[0];  
}

RandomTool();
